#coding:utf-8

"""

** API 소개 **

마야를 사용하는 레이아웃 팀을 위한 api입니다.
마야에 내장된 스크립트를 클릭하면 모든 에셋, 카메라, 언디스토션 이미지를 불러오거나 작업물을 저장할 수 있습니다.
Kitsu에서 기록된 정보를 가져와 마야에서 Load/Save 및 작업을 진행합니다.
파일 경로를 추적하여 작업 파일과 아웃풋 파일, 프리뷰 영상을 실제 폴더 트리에 저장합니다.
Kitsu에 퍼블리시한 후 파일들을 업로드합니다.
구버전 작업 시 최신파일이 존재하는 것을 표시해 줍니다.



--------------------------------------------------------------------------------------------


Team Pizza License


Original work Copyright (c) 2023 Team Pizza


--------------------------------------------------------------------------------------------


이에 따라 사본을 입수하는 모든 사람에게 무료로 허가가 부여됩니다.
이 소프트웨어 및 관련 문서 파일("소프트웨어")을 처리합니다.
사용, 복사, 수정, 병합, 게시, 배포, 하위 라이센스 및/또는 판매
본 소프트웨어의 사본 및 본 소프트웨어를 사용하는 사람을 허용합니다.

다음 조건에 따라 제공됩니다:
위의 저작권 고지 및 이 허가 고지는 다음에 포함되어야 합니다.

본 소프트웨어 또는 사용 또는 기타 거래와 관련되거나 이와 관련하여 어떠한 경우에도
저작자 또는 저작권 소유자는 계약상의 행위, 불법행위, 그 밖의 행위에 관계없이 발생하는
모든 청구, 손해 또는 기타에 대해 책임을 지지 않습니다.


--------------------------------------------------------------------------------------------


(1) kitsumaya
Shot에 있는 레이아웃 팀에 주어진 task에 캐스팅된 asset의 경로를 추출하고, 마야에 import 한다.
폴더 트리에 저장된 working, output, preview 파일을 Kitsu에 퍼블리시한다.


(2) publish
Kitsu에 워킹 파일과 아웃풋 파일에 대한 정보를 먼저 기록한 뒤, 폴더를 생성하기 위한 path를 build 한다.


(3) thumbnail
Kitsu에 로그인 후 task entity의 메인 프리뷰의 url을 구하고, 그 url로부터 데이터를 받아온다.


(4) Logger
로깅 모듈을 사용하여 로그 메시지를 생성하고 파일에 기록합니다.
호스트에 대한 성공적인 연결, 로그인 시도, 파일 생성 및 로드와 같은 응용 프로그램에서 사용할 수 있습니다.


(5) Login
gazu 라이브러리를 사용하여 서버 호스트에 연결하고, 사용자 ID와 암호로 로그인할 수 있습니다.
이러한 설정을 로컬 디렉터리의 user.json 파일에 저장합니다.


(6) filter
task asset이 캐스팅된 샷의 언디스토션 이미지와 camera output의 정보 중 필요한 내용을 추출한 후,
유저가 필터링을 했는지 판별하여 해당하는 task들만 노출하는 매서드.


--------------------------------------------------------------------------------------------






"""
